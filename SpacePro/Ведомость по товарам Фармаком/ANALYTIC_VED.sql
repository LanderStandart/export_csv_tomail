/******************************************************************************/
/***               Generated by IBExpert 15.04.2019 14:31:44                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR GEN_ANALYTIC_VED;

CREATE TABLE ANALYTIC_VED (
    ID                DM_ID /* DM_ID = BIGINT NOT NULL */,
    SNAME             DM_TEXT /* DM_TEXT = VARCHAR(250) */,
    G$PROFILE_ID      DM_ID /* DM_ID = BIGINT NOT NULL */,
    ANALITIC_UUID     DM_UUID /* DM_UUID = CHAR(36) NOT NULL */,
    SIZG              DM_TEXT /* DM_TEXT = VARCHAR(250) */,
    AGENT_ID          DM_ID_NULL /* DM_ID_NULL = BIGINT */,
    QUANT             DM_DOUBLE DEFAULT 0 /* DM_DOUBLE = DOUBLE PRECISION */,
    QUANT_BEG         DM_DOUBLE DEFAULT 0 /* DM_DOUBLE = DOUBLE PRECISION */,
    QUANT_PRIHOD      DM_DOUBLE DEFAULT 0 /* DM_DOUBLE = DOUBLE PRECISION */,
    QUANT_PP          DM_DOUBLE DEFAULT 0 /* DM_DOUBLE = DOUBLE PRECISION */,
    QUANT_RP          DM_DOUBLE /* DM_DOUBLE = DOUBLE PRECISION */,
    QUANT_OTHER       DM_DOUBLE /* DM_DOUBLE = DOUBLE PRECISION */,
    QUANT_END         DM_DOUBLE DEFAULT 0 /* DM_DOUBLE = DOUBLE PRECISION */,
    SUMMA             DM_DOUBLE DEFAULT 0 /* DM_DOUBLE = DOUBLE PRECISION */,
    PART_ID           DM_ID_NULL /* DM_ID_NULL = BIGINT */,
    NAME_ID           DM_UUID_NULL /* DM_UUID_NULL = CHAR(36) */,
    PRICE_M           DM_DOUBLE /* DM_DOUBLE = DOUBLE PRECISION */,
    WARES_SET_D$UUID  DM_UUID_NULL /* DM_UUID_NULL = CHAR(36) */,
    WARE_ID           DM_UUID_NULL /* DM_UUID_NULL = CHAR(36) */
);




/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE ANALYTIC_VED ADD CONSTRAINT PK_ANALYTIC_VED PRIMARY KEY (ID);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE ANALYTIC_VED ADD CONSTRAINT FK_ANALYTIC_VED_1 FOREIGN KEY (ANALITIC_UUID) REFERENCES SP$ANALYTIC_DOCS (D$UUID);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX ANALYTIC_VED_IDX1 ON ANALYTIC_VED (PART_ID, G$PROFILE_ID, ANALITIC_UUID);
CREATE INDEX ANALYTIC_VED_IDX13 ON ANALYTIC_VED (G$PROFILE_ID);
CREATE INDEX ANALYTIC_VED_IDX3 ON ANALYTIC_VED (SNAME, ID);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: ANALYTIC_VED_B1 */
CREATE OR ALTER TRIGGER ANALYTIC_VED_B1 FOR ANALYTIC_VED
ACTIVE BEFORE UPDATE POSITION 0
AS
begin /*$$IBE$$ 
  if (new.GROUP_ID0=0) then
  begin
      new.QUANT = coalesce(old.quant,0)+ coalesce(new.quant,0);
      new.summa = coalesce(old.summa,0)+ coalesce(new.summa,0);
      new.QUANT_PRIHOD = coalesce(old.QUANT_PRIHOD,0)+ coalesce(new.QUANT_PRIHOD,0);
      new.QUANT_PP = coalesce(old.QUANT_PP,0)+ coalesce(new.QUANT_PP,0);
      new.QUANT_RP = coalesce(old.QUANT_RP,0)+ coalesce(new.QUANT_RP,0);
    new.QUANT_OTHER = coalesce(old.QUANT_OTHER,0)+ coalesce(new.QUANT_OTHER,0);
  end
  if (new.GROUP_ID0=1) then
    new.QUANT_BEG = coalesce(old.QUANT_BEG,0)+ coalesce(new.QUANT_BEG,0);
  if (new.GROUP_ID0=2) then
  new.QUANT_END = coalesce(old.QUANT_END,0)+ coalesce(new.QUANT_END,0);


 $$IBE$$*/ POST_EVENT '$$IBE$$';
end
^


/* Trigger: ANALYTIC_VED_BI0 */
CREATE OR ALTER TRIGGER ANALYTIC_VED_BI0 FOR ANALYTIC_VED
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.id is null) then
    new.id = gen_id(GEN_ANALYTIC_VED,1);

  if (new.QUANT is null) then new.quant=0;
  if (new.SUMMA is null) then new.SUMMA=0;
  if (new.QUANT_PRIHOD is null) then new.QUANT_PRIHOD=0;
  if (new.QUANT_PP is null) then new.QUANT_PP=0;
  if (new.QUANT_BEG is null) then new.QUANT_BEG=0;
  if (new.QUANT_END is null) then new.QUANT_END=0;
  if (new.QUANT_RP is null) then new.QUANT_RP=0;
  if (new.QUANT_OTHER is null) then new.QUANT_OTHER=0;
end
^


/* Trigger: ANALYTIC_VED_BIU1 */
CREATE OR ALTER TRIGGER ANALYTIC_VED_BIU1 FOR ANALYTIC_VED
ACTIVE BEFORE INSERT OR UPDATE POSITION 1
AS
begin
  if (new.agent_id is null) then
  select p.agent_global_id,ware_id from parts p where p.id=new.part_id and p.g$profile_id=new.g$profile_id into new.agent_id,new.ware_id;
  select w.name_id,w.sname,(select v.svalue from vals v where v.id=w.izg_id) from wares w where w.id=new.ware_id into new.name_id,new.sname,new.sizg;
  select first 1 wd.price from wares_set_detail wd where wd.ware_id=new.ware_id and wd.wares_set_d$uuid=new.wares_set_d$uuid into new.price_m;
end
^


SET TERM ; ^



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/
